apiVersion: apps/v1
kind: Deployment
metadata:
  name: labelstudio
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      component: labelstudio
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        component: labelstudio
    spec:
      containers:
        - name: labelstudio
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: Always
          stdin: true
          tty: true
          env:
            - name: DJANGO_DB
              value: default
            - name: POSTGRE_NAME
              value: postgres
            - name: POSTGRE_USER
              value: postgres
            - name: POSTGRE_PORT
              value: "5432"
            - name: POSTGRE_HOST
              value: "postgres"
            - name: LABEL_STUDIO_HOST
              value: "http://{{ .Values.labelStudioHost.host }}/{{ .Values.labelStudioHost.subpath }}" # <Host>:<Nginx NodePort> 형식으로 해야함
            - name: LOCAL_FILES_SERVING_ENABLED
              value: "true"
          volumeMounts:
            - name: labelstudio-data-vol
              mountPath: /label-studio/data
      volumes:
        - name: labelstudio-data-vol
          persistentVolumeClaim:
            claimName: labelstudio-data-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: labelstudio-data-pvc
  annotations:
    volume.beta.kubernetes.io/storage-class: "managed-nfs-storage"
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 50Gi
---
apiVersion: v1
kind: Service
metadata:
  name: labelstudio-svc
spec:
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    component: labelstudio
  type: ClusterIP

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  default.conf: |
    server {
        listen       80;
        server_name  labelstudio;
        proxy_redirect          off;
        proxy_set_header        Host            $host;
        proxy_set_header        X-Real-IP       $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        client_body_buffer_size 128k;
        proxy_connect_timeout   300;
        proxy_send_timeout      300;
        proxy_read_timeout      300;
        proxy_buffers           32 4k;
        location / {
            proxy_pass http://labelstudio-svc.{{ .Release.Namespace }}.svc.cluster.local:8080; # <labelstudio svc ClusterIP>:<Port> 형태로 Service 상에 등록한 포트까지 반드시 지정해야함
            add_header 'Access-Control-Allow-Origin' '*';
        }
        location /data/upload {
            alias /label-studio/data/media/upload/;
        }
        location /data/avatars {
            alias /label-studio/data/media/avatars;
        }
        location /static {
            alias /label-studio/label_studio/core/static_build/;
            add_header 'Access-Control-Allow-Origin' '*';
        }
        location /label-studio-frontend {
            alias /label-studio/label_studio/frontend/dist/lsf;
        }
        location /react-app {
            alias /label-studio/label_studio/frontend/dist/react-app;
        }
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      component: nginx
  template:
    metadata:
      labels:
        component: nginx
    spec:
      initContainers:
        - name: labelstudio-static-copy
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          command:
            - sh
            - "-ce"
            - |
              set -ex
              cp -r /label-studio/label_studio/* /tmp/static/
          volumeMounts:
            - name: labelstudio-static-vol
              mountPath: /tmp/static

      containers:
        - name: nginx
          image: nginx:latest
          imagePullPolicy: Always
          command: ["nginx"]
          args: ["-g", "daemon off;"]
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/conf.d
            - name: labelstudio-data-vol
              mountPath: /label-studio/data
            - name: labelstudio-static-vol
              mountPath: /label-studio/label_studio
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-config
            items:
              - key: "default.conf"
                path: "default.conf"
        - name: labelstudio-data-vol
          persistentVolumeClaim:
            claimName: labelstudio-data-pvc
        - name: labelstudio-static-vol
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-svc
spec:
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
  selector:
    component: nginx
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      component: postgres
  template:
    metadata:
      labels:
        component: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:11.5
          imagePullPolicy: Always
          env:
            - name: POSTGRES_HOST_AUTH_METHOD
              value: trust
          volumeMounts:
            - name: postgres-vol
              mountPath: /var/lib/postgresql/data
     
  volumeClaimTemplates:
    - metadata:
        name: postgres-vol
      spec:
        storageClassName: managed-nfs-storage-retain
        accessModes: ["ReadWriteOnce"]
        # persistentVolumeReclaimPolicy: Retain
        resources:
          requests:
            storage: 25Gi

---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  selector:
    component: postgres
  ports:
    - port: 5432
      targetPort: 5432
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$2 # 이 글 참조할 것 (https://kubernetes.github.io/ingress-nginx/examples/rewrite/#examples)
spec:
  rules:
    - http:
        paths:
          - backend:
              service:
                port:
                  number: 80
                name: nginx-svc
            path: /{{ .Values.labelStudioHost.subpath }}(/|$)(.*)  # /ls/<project-name>(/|$)(.*) 형태로 지정할 것
            pathType: Prefix
      host: {{ .Values.labelStudioHost.host }}
